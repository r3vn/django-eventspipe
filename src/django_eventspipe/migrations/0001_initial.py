# Generated by Django 5.2 on 2025-04-06 20:25

import django.db.models.deletion
import django_eventspipe.utils
import django_eventspipe.validators
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data', models.BinaryField(blank=True)),
                ('md5sum', models.CharField(editable=False, max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PipelineDefinition',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rules', models.JSONField(blank=True, default=dict, null=True)),
                ('options', models.JSONField(blank=True, default=dict, null=True)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskDefinition',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('function', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event', models.JSONField(default=dict, help_text='Initial context for a Pipeline', validators=[django_eventspipe.validators.event_validator])),
                ('enabled', models.BooleanField(default=False)),
                ('minute', models.CharField(default='*', help_text='Cron Minutes to Run. Use "*" for "all". (Example: "0,30")', max_length=240, validators=[django_eventspipe.validators.minute_validator], verbose_name='Minute(s)')),
                ('hour', models.CharField(default='*', help_text='Cron Hours to Run. Use "*" for "all". (Example: "8,20")', max_length=96, validators=[django_eventspipe.validators.hour_validator], verbose_name='Hour(s)')),
                ('day_of_month', models.CharField(default='*', help_text='Cron Days Of The Month to Run. Use "*" for "all". (Example: "1,15")', max_length=124, validators=[django_eventspipe.validators.day_of_month_validator], verbose_name='Day(s) Of The Month')),
                ('month_of_year', models.CharField(default='*', help_text='Cron Months (1-12) Of The Year to Run. Use "*" for "all". (Example: "1,12")', max_length=64, validators=[django_eventspipe.validators.month_of_year_validator], verbose_name='Month(s) Of The Year')),
                ('day_of_week', models.CharField(default='*', help_text='Cron Days Of The Week to Run. Use "*" for "all", Sunday is 0 or 7, Monday is 1. (Example: "0,5")', max_length=64, validators=[django_eventspipe.validators.day_of_week_validator], verbose_name='Day(s) Of The Week')),
                ('user', models.ForeignKey(on_delete=models.SET(django_eventspipe.utils.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('node', models.CharField(default='undefined', max_length=256)),
                ('name', models.CharField(max_length=128)),
                ('status', models.IntegerField(choices=[(0, 'running'), (1, 'success'), (2, 'error'), (3, 'queued')], default=3)),
                ('event', models.JSONField(blank=True, default=dict, null=True)),
                ('tasks_count', models.IntegerField(default=0)),
                ('current_task', models.IntegerField(default=0)),
                ('start_ts', models.DateTimeField(auto_now_add=True)),
                ('end_ts', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=models.SET(django_eventspipe.utils.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
                ('definition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_eventspipe.pipelinedefinition')),
            ],
        ),
        migrations.CreateModel(
            name='PipelineArtifact',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(default='undefined', max_length=1024)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_eventspipe.artifact')),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_eventspipe.pipeline')),
            ],
            options={
                'verbose_name': 'Artifact',
                'verbose_name_plural': 'Artifacts',
            },
        ),
        migrations.CreateModel(
            name='PipelineDefinitionTaskDefinition',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=20)),
                ('pipeline_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_eventspipe.pipelinedefinition')),
                ('task_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_eventspipe.taskdefinition')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(0, 'running'), (1, 'success'), (2, 'error'), (3, 'queued'), (4, 'skipped')], default=2)),
                ('node', models.CharField(default='undefined', max_length=256)),
                ('start_ts', models.DateTimeField(blank=True, null=True)),
                ('end_ts', models.DateTimeField(blank=True, null=True)),
                ('definition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_eventspipe.pipelinedefinitiontaskdefinition')),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_eventspipe.pipeline')),
            ],
        ),
    ]
